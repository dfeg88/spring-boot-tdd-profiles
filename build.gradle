buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
		mockitoVersion = '2.22.0'
		jUnitVersion = '5.3.1'
		hamcrestVersion = '1.3'
		lombokVersion = '1.18.2'
		jacksonVersion = '2.0.1'
		mongoJackVersion = '2.9.4'
		assertJVersion = '3.11.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.moneysupermarket'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')

	// Test
	testCompile("org.junit.jupiter:junit-jupiter-api:${jUnitVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-params:${jUnitVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}")
	testCompile("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
	testCompile("org.mockito:mockito-core:${mockitoVersion}")
	testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")
	testCompile("org.assertj:assertj-core:${assertJVersion}")

	// Jackson
	compileOnly "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

	// Mongo Jack
	compile "org.mongojack:mongojack:${mongoJackVersion}"

	// Lombok
	compile "org.projectlombok:lombok:$lombokVersion"
}
